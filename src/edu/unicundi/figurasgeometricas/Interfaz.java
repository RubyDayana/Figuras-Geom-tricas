/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.unicundi.figurasgeometricas;

//import figurasgeometricas.PlanoCartesiano.Graficar;
import java.awt.Graphics;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Ruby Dayana Cárdenas - Andrés Felipe Gómez
 */
public class Interfaz extends javax.swing.JFrame {

    private int seleccionFigura;
    private int seleccionColor;
    private int seleccionFiguraAgregada;
    private String faltaCoordenada = "";
    private boolean validarTipoFigura;
    private boolean validarCamposVacios;
    private boolean validarSeleccion;
    private boolean validarSoloNumeros;
    private int coordenada1X;
    private int coordenada1Y;
    private int coordenada2X;
    private int coordenada2Y;
    private int coordenada3X;
    private int coordenada3Y;
    private int coordenada4X;
    private int coordenada4Y;
    FigurasGeometricas[] figuras = new FigurasGeometricas[3];

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelVariables = new javax.swing.JPanel();
        seleccionarFigura = new javax.swing.JComboBox();
        seleccionarColor = new javax.swing.JComboBox();
        digiteCoordenadas = new javax.swing.JLabel();
        tituloCoordenada1 = new javax.swing.JLabel();
        coor1PosicionX = new javax.swing.JTextField();
        coor1PosicionY = new javax.swing.JTextField();
        tituloCoordenada2 = new javax.swing.JLabel();
        coor2PosicionX = new javax.swing.JTextField();
        coor2PosicionY = new javax.swing.JTextField();
        tituloCoordenada3 = new javax.swing.JLabel();
        coor3PosicionX = new javax.swing.JTextField();
        coor3PosicionY = new javax.swing.JTextField();
        tituloCoordenada4 = new javax.swing.JLabel();
        coor4PosicionX = new javax.swing.JTextField();
        coor4PosicionY = new javax.swing.JTextField();
        tituloPrincipal = new javax.swing.JLabel();
        planoCartesiano = new javax.swing.JPanel();
        panelResultados = new javax.swing.JPanel();
        tituloArea = new javax.swing.JLabel();
        tituloPerimetro = new javax.swing.JLabel();
        area = new javax.swing.JLabel();
        perimetro = new javax.swing.JLabel();
        tituloTipoTriangulo = new javax.swing.JLabel();
        tipoTriangulo = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        graficar1 = new javax.swing.JButton();
        seleccionarFiguraAgregada = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(52, 73, 85));

        panelVariables.setBackground(new java.awt.Color(236, 239, 241));
        panelVariables.setForeground(new java.awt.Color(255, 255, 255));

        seleccionarFigura.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione la figura", "Triángulo", "Cuadrado", "Rectangulo" }));
        seleccionarFigura.setName("seleccionarFigura"); // NOI18N
        seleccionarFigura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarFiguraActionPerformed(evt);
            }
        });

        seleccionarColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione el Color", "Azul", "Amarillo", "Rojo", "Verde", "Magenta" }));
        seleccionarColor.setName("seleccionarColor"); // NOI18N

        digiteCoordenadas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        digiteCoordenadas.setText("Digite las coordenadas");
        digiteCoordenadas.setToolTipText("");
        digiteCoordenadas.setName("tituloCoordenadas"); // NOI18N

        tituloCoordenada1.setText("Primera Coordenada (X,Y)");
        tituloCoordenada1.setName("tituloCoor1"); // NOI18N

        coor1PosicionX.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        coor1PosicionX.setName("coor1PosicionX"); // NOI18N
        coor1PosicionX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor1PosicionXKeyTyped(evt);
            }
        });

        coor1PosicionY.setName("coor1PosicionY"); // NOI18N
        coor1PosicionY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor1PosicionYKeyTyped(evt);
            }
        });

        tituloCoordenada2.setText("Segunda Coordenada (X,Y)");
        tituloCoordenada2.setName("tituloCoor2"); // NOI18N

        coor2PosicionX.setName("coor1PosicionX"); // NOI18N
        coor2PosicionX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor2PosicionXKeyTyped(evt);
            }
        });

        coor2PosicionY.setName("coor2PosicionY"); // NOI18N
        coor2PosicionY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor2PosicionYKeyTyped(evt);
            }
        });

        tituloCoordenada3.setText("Tercera Coordenada (X,Y)");
        tituloCoordenada3.setName("tituloCoor3"); // NOI18N

        coor3PosicionX.setName("coor1PosicionX"); // NOI18N
        coor3PosicionX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor3PosicionXKeyTyped(evt);
            }
        });

        coor3PosicionY.setName("coor1PosicionY"); // NOI18N
        coor3PosicionY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor3PosicionYKeyTyped(evt);
            }
        });

        tituloCoordenada4.setText("Cuarta coordenada (X,Y)");
        tituloCoordenada4.setName("tituloCoor4"); // NOI18N

        coor4PosicionX.setName("coor1PosicionX"); // NOI18N
        coor4PosicionX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor4PosicionXKeyTyped(evt);
            }
        });

        coor4PosicionY.setName("coor1PosicionY"); // NOI18N
        coor4PosicionY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                coor4PosicionYKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelVariablesLayout = new javax.swing.GroupLayout(panelVariables);
        panelVariables.setLayout(panelVariablesLayout);
        panelVariablesLayout.setHorizontalGroup(
            panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVariablesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelVariablesLayout.createSequentialGroup()
                        .addComponent(seleccionarFigura, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(seleccionarColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tituloCoordenada2)
                    .addComponent(tituloCoordenada1)
                    .addGroup(panelVariablesLayout.createSequentialGroup()
                        .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelVariablesLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(coor1PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coor1PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelVariablesLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(coor2PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coor2PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(86, 86, 86)
                        .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloCoordenada3)
                            .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelVariablesLayout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addComponent(coor4PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(coor4PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(tituloCoordenada4))
                            .addGroup(panelVariablesLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(coor3PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(coor3PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVariablesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(digiteCoordenadas)
                .addGap(99, 99, 99))
        );
        panelVariablesLayout.setVerticalGroup(
            panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVariablesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seleccionarFigura, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seleccionarColor, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(digiteCoordenadas)
                .addGap(18, 18, 18)
                .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloCoordenada1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tituloCoordenada3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coor3PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coor3PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coor1PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coor1PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloCoordenada2)
                    .addComponent(tituloCoordenada4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coor4PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coor2PosicionX, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coor4PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coor2PosicionY, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        tituloPrincipal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tituloPrincipal.setForeground(new java.awt.Color(249, 170, 51));
        tituloPrincipal.setText("FIGURAS GEOMÉTRICAS");
        tituloPrincipal.setName("tituloGeneral"); // NOI18N

        planoCartesiano.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout planoCartesianoLayout = new javax.swing.GroupLayout(planoCartesiano);
        planoCartesiano.setLayout(planoCartesianoLayout);
        planoCartesianoLayout.setHorizontalGroup(
            planoCartesianoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        planoCartesianoLayout.setVerticalGroup(
            planoCartesianoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panelResultados.setBackground(new java.awt.Color(236, 239, 241));

        tituloArea.setText("Area de la figura");

        tituloPerimetro.setText("Perímetro de la figura");

        area.setText("---");

        perimetro.setText("---");

        tituloTipoTriangulo.setText("Tipo de triangulo");

        tipoTriangulo.setText("---");

        javax.swing.GroupLayout panelResultadosLayout = new javax.swing.GroupLayout(panelResultados);
        panelResultados.setLayout(panelResultadosLayout);
        panelResultadosLayout.setHorizontalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(area)
                    .addComponent(tituloArea)
                    .addComponent(tituloTipoTriangulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipoTriangulo)
                    .addComponent(tituloPerimetro)
                    .addComponent(perimetro))
                .addGap(25, 25, 25))
        );
        panelResultadosLayout.setVerticalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultadosLayout.createSequentialGroup()
                        .addComponent(tituloArea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(area)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultadosLayout.createSequentialGroup()
                        .addComponent(tituloPerimetro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(perimetro)
                        .addGap(18, 18, 18)
                        .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tituloTipoTriangulo)
                            .addComponent(tipoTriangulo))))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        agregar.setBackground(new java.awt.Color(255, 204, 0));
        agregar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        agregar.setText("AGREGAR");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        graficar1.setBackground(new java.awt.Color(0, 255, 0));
        graficar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        graficar1.setText("GRAFICAR Y CALCULAR");
        graficar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficar1ActionPerformed(evt);
            }
        });

        seleccionarFiguraAgregada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione la figura", "Triángulo", "Cuadrado", "Rectangulo" }));
        seleccionarFiguraAgregada.setName("seleccionarFigura"); // NOI18N
        seleccionarFiguraAgregada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarFiguraAgregadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(planoCartesiano, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelResultados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelVariables, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addComponent(seleccionarFiguraAgregada, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(graficar1)))
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap(306, Short.MAX_VALUE)
                .addComponent(tituloPrincipal)
                .addGap(266, 266, 266))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(tituloPrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(panelVariables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(graficar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seleccionarFiguraAgregada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(planoCartesiano, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seleccionarFiguraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarFiguraActionPerformed
        validarTipoFigura();
    }//GEN-LAST:event_seleccionarFiguraActionPerformed

    private void coor1PosicionXKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor1PosicionXKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor1PosicionXKeyTyped

    private void coor1PosicionYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor1PosicionYKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor1PosicionYKeyTyped

    private void coor2PosicionXKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor2PosicionXKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor2PosicionXKeyTyped

    private void coor2PosicionYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor2PosicionYKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor2PosicionYKeyTyped

    private void coor3PosicionXKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor3PosicionXKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor3PosicionXKeyTyped

    private void coor3PosicionYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor3PosicionYKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor3PosicionYKeyTyped

    private void coor4PosicionXKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor4PosicionXKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor4PosicionXKeyTyped

    private void coor4PosicionYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coor4PosicionYKeyTyped
        validarSoloNumeros(evt);
    }//GEN-LAST:event_coor4PosicionYKeyTyped

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        validarSeleccion();
        switch (seleccionFigura) {
            case 1:
                Triangulo triangulo = new Triangulo(coordenada1X, coordenada2X, coordenada3X, coordenada1Y, coordenada2Y, coordenada3Y);
                triangulo.hallarLados(coordenada1X, coordenada2X, coordenada3X, coordenada1Y, coordenada2Y, coordenada3Y);
                /*triangulo.hallarPerimetro();
                 triangulo.hallarArea();
                 triangulo.hallaTipo();*/
                figuras[0] = triangulo;

                break;
            case 2:
                Cuadrado cuadrado = new Cuadrado(coordenada1X, coordenada2X, coordenada3X, coordenada4X, coordenada1Y, coordenada2Y, coordenada3Y, coordenada4Y);
                cuadrado.hallarLados(coordenada1X, coordenada2X, coordenada3X, coordenada1Y, coordenada2Y, coordenada3Y);
               /* cuadrado.hallarLado();
                cuadrado.getPerimetro();
                cuadrado.hallarArea();*/
                figuras[1] = cuadrado;
                break;
            case 3:
                Rectangulo rectangulo = new Rectangulo(coordenada1X, coordenada2X, coordenada3X, coordenada4X, coordenada1Y, coordenada2Y, coordenada3Y, coordenada4Y);
                rectangulo.hallarLados(coordenada1X, coordenada2X, coordenada3X, coordenada1Y, coordenada2Y, coordenada3Y);
               /* rectangulo.hallarLado();
                rectangulo.getPerimetro();
                rectangulo.hallarArea();*/
                figuras[2] = rectangulo;
                break;
        }

    }//GEN-LAST:event_agregarActionPerformed

    public void seleccionarFiguraAgregada() {
        seleccionFiguraAgregada = seleccionarFiguraAgregada.getSelectedIndex();
    }


    private void graficar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficar1ActionPerformed
        validarSeleccion();
        seleccionarFiguraAgregada();

        Triangulo triangulo = new Triangulo(coordenada1X, coordenada2X, coordenada3X, coordenada1Y, coordenada2Y, coordenada3Y);
        Cuadrado cuadrado = new Cuadrado(coordenada1X, coordenada2X, coordenada3X, coordenada4X, coordenada1Y, coordenada2Y, coordenada3Y, coordenada4Y);
        Rectangulo rectangulo = new Rectangulo(coordenada1X, coordenada2X, coordenada3X, coordenada4X, coordenada1Y, coordenada2Y, coordenada3Y, coordenada4Y);
        switch (seleccionFiguraAgregada) {
            case 1:
                for (int i = 0; i < figuras.length; i++) {
                    if (figuras[i] instanceof Triangulo) {
                        triangulo.hallarPerimetro();
                        triangulo.hallarArea();
                        triangulo.hallaTipo();
                        perimetro.setText(String.valueOf(((Triangulo) figuras[i]).getPerimetro()));
                        area.setText(String.valueOf(((Triangulo) figuras[i]).getArea()));
                        tipoTriangulo.setText(((Triangulo) figuras[i]).getTipoTriangulo());
                    }
                }
                break;

            case 2:
                for (int i = 0; i < figuras.length; i++) {
                    if (figuras[i] instanceof Cuadrado) {
                        cuadrado.hallarLado();
                        cuadrado.getPerimetro();
                        cuadrado.hallarArea();
                        perimetro.setText(String.valueOf(((Cuadrado) figuras[i]).getPerimetro()));
                        area.setText(String.valueOf(((Cuadrado) figuras[i]).getArea()));

                    }
                }
                break;
            case 3:
                for (int i = 0; i < figuras.length; i++) {
                    if (figuras[i] instanceof Rectangulo) {
                        perimetro.setText(String.valueOf(((Rectangulo) figuras[i]).getPerimetro()));
                        area.setText(String.valueOf(((Rectangulo) figuras[i]).getArea()));

                    }

                }
                break;
        }
        /*for (int i = 0; i < figuras.length; i++) {
         if (figuras[i] instanceof Triangulo) {
         perimetro.setText(String.valueOf(((Triangulo) figuras[i]).getPerimetro()));
         area.setText(String.valueOf(((Triangulo) figuras[i]).getArea()));
         tipoTriangulo.setText(((Triangulo) figuras[i]).getTipoTriangulo());                

         } else if (figuras[i] instanceof Cuadrado) {
         perimetro.setText(String.valueOf(((Cuadrado) figuras[i]).getPerimetro()));
         area.setText(String.valueOf(((Cuadrado) figuras[i]).getArea()));

         } else if (figuras[i] instanceof Rectangulo) {
         perimetro.setText(String.valueOf(((Rectangulo) figuras[i]).getPerimetro()));
         area.setText(String.valueOf(((Rectangulo) figuras[i]).getArea()));

         }else{
         JOptionPane.showMessageDialog(null, "No existen figuras almacenadas", "Error No existen Figuras", JOptionPane.INFORMATION_MESSAGE);
         }
         }*/

        dibujar();
    }//GEN-LAST:event_graficar1ActionPerformed

    private void seleccionarFiguraAgregadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarFiguraAgregadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarFiguraAgregadaActionPerformed
    /**
     * Este método utiliza la variable seleccionFigura, que obtiene el indice de
     * seleccion de la figura que eligió el usuario para obtener tres pares de
     * coordenadas o cuatro pares, dependiendo del tipo de figura.
     */
    public void obtenerCoordenadas() {
        switch (seleccionFigura) {
            case 1: {
                obtenerTresCoordenadas();
            }
            break;
            case 2 | 3: {
                obtenerCuatroCoordenadas();
            }
            break;
        }
    }

    /**
     * Este método obtiene el valor de 3 coordenadas.
     */
    public void obtenerTresCoordenadas() {
        coordenada1X = Integer.parseInt(coor1PosicionX.getText());
        coordenada1Y = Integer.parseInt(coor1PosicionY.getText());
        coordenada2X = Integer.parseInt(coor2PosicionX.getText());
        coordenada2Y = Integer.parseInt(coor2PosicionY.getText());
        coordenada3X = Integer.parseInt(coor3PosicionX.getText());
        coordenada3Y = Integer.parseInt(coor3PosicionY.getText());
    }

    /**
     * Este método obtiene el valor de 4 coordenadas.
     */
    public void obtenerCuatroCoordenadas() {
        obtenerTresCoordenadas();
        coordenada4X = Integer.parseInt(coor4PosicionX.getText());
        coordenada4Y = Integer.parseInt(coor4PosicionY.getText());
    }

    /**
     * Este método obtiene el índice de selección de el JComboBox
     * seleccionarColor.
     */
    public void seleccionarColor() {
        seleccionColor = seleccionarColor.getSelectedIndex();
    }

    /**
     * Este método obtiene el índice de selección de el JComboBox
     * seleccionarFigura.
     */
    public void seleccionarFigura() {
        seleccionFigura = seleccionarFigura.getSelectedIndex();
    }

    /**
     * Este método obtiene el índice de seleccion del JComboBox
     * seleccionarFigura y lo usa para ocultar o mostrar los campos de las
     * coordenadas de acuerdo al tipo de figura que se seleccionó.
     */
    public void validarTipoFigura() {
        seleccionarFigura();
        switch (seleccionFigura) {
            case 1: {
                ocultarCamposCoordenadas();
            }
            break;
            case 2 | 3: {
                verCamposCoordenadas();
            }
            break;
            default: {
                verCamposCoordenadas();
            }
        }
    }

    /**
     * Este metodo valida que los campos JTextField no esten vacios cuando el
     * usuario de clic en el boton de GRAFICAR Y CALCULAR.
     */
    public void validarCamposVacios() {
        if (coor1PosicionX.getText().isEmpty() || coor1PosicionY.getText().isEmpty()) {
            faltaCoordenada = "primera";
            mensajeCamposVacios();
        } else if (coor2PosicionX.getText().isEmpty() || (coor2PosicionY.getText().isEmpty())) {
            faltaCoordenada = "segunda";
            mensajeCamposVacios();
        } else if (coor3PosicionX.getText().isEmpty() || coor3PosicionY.getText().isEmpty()) {
            faltaCoordenada = "tercera";
            mensajeCamposVacios();
        } else if (seleccionFigura == 2 || seleccionFigura == 3) {
            if (coor4PosicionX.getText().isEmpty() || coor4PosicionY.getText().isEmpty()) {
                faltaCoordenada = "cuarta";
                mensajeCamposVacios();
            }
        } else {
            obtenerCoordenadas();
        }
    }

    /**
     * Mensaje recursivo para mostrar advertencias
     */
    public void mensajeCamposVacios() {
        JOptionPane.showMessageDialog(null, "Digite las coordenadas de la " + faltaCoordenada + " posicion ", "CAMPOS VACIOS", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * Este método valida que los elementos de tipo JComboBox tengan una
     * seleccion válida.
     */
    public void validarSeleccion() {
        String opcion = "";
        seleccionarFigura();
        seleccionarColor();
        if (seleccionFigura == 0) {
            opcion = "un tipo de figura.";
            JOptionPane.showMessageDialog(null, "Seleccione " + opcion, "Se requiere...", JOptionPane.INFORMATION_MESSAGE);
        } else if (seleccionColor == 0) {
            opcion = "un color.";
            JOptionPane.showMessageDialog(null, "Seleccione " + opcion, "Se requiere...", JOptionPane.INFORMATION_MESSAGE);
        } else {
            validarCamposVacios();
        }
    }

    /**
     * Este método valida que en los JTextField se digiten solo números.
     *
     * @param evt
     */
    public void validarSoloNumeros(java.awt.event.KeyEvent evt) {
        char validarNumeros = evt.getKeyChar();
        if (Character.isLetter(validarNumeros)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar solo Números");
        }
    }

    /**
     * Este método oculta los campos de las coordenadas para la posición 4
     */
    public void ocultarCamposCoordenadas() {
        tituloCoordenada4.setVisible(false);
        coor4PosicionX.setVisible(false);
        coor4PosicionY.setVisible(false);
        coor4PosicionY.setText(null);
        coor4PosicionX.setText(null);
    }

    /**
     * Este método muestra los campos de las coordenadas para la posición 4
     */
    public void verCamposCoordenadas() {
        tituloCoordenada4.setVisible(true);
        coor4PosicionX.setVisible(true);
        coor4PosicionY.setVisible(true);
    }

    private void seleccionFiguraAgregada() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public class DibujarFiguras extends JPanel {

        protected void paintComponent(Graphics g) {
            Graficar graficar = new Graficar();
            graficar.seleccionarColor(seleccionColor, g);
            graficar.paintComponent(seleccionFigura, coordenada1X, coordenada1Y, coordenada2X, coordenada2Y, coordenada3X, coordenada3Y, coordenada4X, coordenada4Y, g);
        }

    }

    private void dibujar() {
        Interfaz.DibujarFiguras dibujo = new Interfaz.DibujarFiguras();
        dibujo.setBounds(100, 100, 1000, 1000);
        dibujo.setOpaque(false);
        planoCartesiano.add(dibujo);
        planoCartesiano.repaint();
    }

//GETTER 
    public JTextField getCoor1PosicionX() {
        return coor1PosicionX;
    }

    public JTextField getCoor1PosicionY() {
        return coor1PosicionY;
    }

    public JTextField getCoor2PosicionX() {
        return coor2PosicionX;
    }

    public JTextField getCoor2PosicionY() {
        return coor2PosicionY;
    }

    public JTextField getCoor3PosicionX() {
        return coor3PosicionX;
    }

    public JTextField getCoor3PosicionY() {
        return coor3PosicionY;
    }

    public JTextField getCoor4PosicionX() {
        return coor4PosicionX;
    }

    public JTextField getCoor4PosicionY() {
        return coor4PosicionY;
    }

    public JComboBox getSeleccionarColor() {
        return seleccionarColor;
    }

    public JComboBox getSeleccionarFigura() {
        return seleccionarFigura;
    }

    public JLabel getTituloCoordenada4() {
        return tituloCoordenada4;
    }

    public int getSeleccionFigura() {
        return seleccionFigura;
    }

    public int getSeleccionColor() {
        return seleccionColor;
    }

    public int getCoordenada1X() {
        return coordenada1X;
    }

    public int getCoordenada1Y() {
        return coordenada1Y;
    }

    public int getCoordenada2X() {
        return coordenada2X;
    }

    public int getCoordenada2Y() {
        return coordenada2Y;
    }

    public int getCoordenada3X() {
        return coordenada3X;
    }

    public int getCoordenada3Y() {
        return coordenada3Y;
    }

    public int getCoordenada4X() {
        return coordenada4X;
    }

    public int getCoordenada4Y() {
        return coordenada4Y;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JLabel area;
    private javax.swing.JTextField coor1PosicionX;
    private javax.swing.JTextField coor1PosicionY;
    private javax.swing.JTextField coor2PosicionX;
    private javax.swing.JTextField coor2PosicionY;
    private javax.swing.JTextField coor3PosicionX;
    private javax.swing.JTextField coor3PosicionY;
    private javax.swing.JTextField coor4PosicionX;
    private javax.swing.JTextField coor4PosicionY;
    private javax.swing.JLabel digiteCoordenadas;
    private javax.swing.JButton graficar1;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelResultados;
    private javax.swing.JPanel panelVariables;
    private javax.swing.JLabel perimetro;
    private javax.swing.JPanel planoCartesiano;
    private javax.swing.JComboBox seleccionarColor;
    private javax.swing.JComboBox seleccionarFigura;
    private javax.swing.JComboBox seleccionarFiguraAgregada;
    private javax.swing.JLabel tipoTriangulo;
    private javax.swing.JLabel tituloArea;
    private javax.swing.JLabel tituloCoordenada1;
    private javax.swing.JLabel tituloCoordenada2;
    private javax.swing.JLabel tituloCoordenada3;
    private javax.swing.JLabel tituloCoordenada4;
    private javax.swing.JLabel tituloPerimetro;
    private javax.swing.JLabel tituloPrincipal;
    private javax.swing.JLabel tituloTipoTriangulo;
    // End of variables declaration//GEN-END:variables
}
